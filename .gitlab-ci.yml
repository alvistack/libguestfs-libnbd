variables:
  GIT_DEPTH: 100
  DOCKER_DRIVER: overlay2

stages:
  - containers
  - builds

.script_variables: &script_variables |
  export MAKEFLAGS="-j $(getconf _NPROCESSORS_ONLN)"
  export CCACHE_BASEDIR="$(pwd)"
  export CCACHE_DIR="$CCACHE_BASEDIR/ccache"
  export CCACHE_MAXSIZE="500M"
  export PATH="$CCACHE_WRAPPERSDIR:$PATH"

# Common templates

.container_job:
  image: docker:stable
  stage: containers
  needs: []
  services:
    - name: registry.gitlab.com/libvirt/libvirt-ci/docker-dind:master
      alias: docker
  before_script:
    - export TAG="$CI_REGISTRY_IMAGE/$NAME:latest"
    - export COMMON_TAG="$CI_REGISTRY/nbdkit/libnbd/$NAME:latest"
    - docker info
    - docker login registry.gitlab.com -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
  script:
    - docker pull "$TAG" || docker pull "$COMMON_TAG" || true
    - docker build --cache-from "$TAG" --cache-from "$COMMON_TAG" --tag "$TAG" -f "ci/containers/$NAME.Dockerfile" ci/containers
    - docker push "$TAG"
  after_script:
    - docker logout

.base_build_job:
  stage: builds
  cache:
    paths:
      - ccache/
    key: "$CI_JOB_NAME"
  before_script:
    - *script_variables
  script:
    - ci/build.sh
  artifacts:
    paths:
      - "config.log"
      - "**/test-suite.log"
    public: true
    when: always

.native_build_job:
  extends: .base_build_job
  image: $CI_REGISTRY_IMAGE/$NAME:latest

# Jobs that we delegate to Cirrus CI because they require an operating
# system other than Linux. These jobs will only run if the required
# setup has been performed on the GitLab account (see ci/README.rst).
#
# The Cirrus CI configuration is generated by replacing target-specific
# variables in a generic template: some of these variables are provided
# when the GitLab CI job is defined, others are taken from a shell
# snippet generated using lcitool.
#
# Note that the $PATH environment variable has to be treated with
# special care, because we can't just override it at the GitLab CI job
# definition level or we risk breaking it completely.
.cirrus_build_job:
  stage: builds
  image: registry.gitlab.com/libvirt/libvirt-ci/cirrus-run:master
  needs: []
  script:
    - source ci/cirrus/$NAME.vars
    - sed -e "s|[@]CI_REPOSITORY_URL@|$CI_REPOSITORY_URL|g"
          -e "s|[@]CI_COMMIT_REF_NAME@|$CI_COMMIT_REF_NAME|g"
          -e "s|[@]CI_COMMIT_SHA@|$CI_COMMIT_SHA|g"
          -e "s|[@]CIRRUS_VM_INSTANCE_TYPE@|$CIRRUS_VM_INSTANCE_TYPE|g"
          -e "s|[@]CIRRUS_VM_IMAGE_SELECTOR@|$CIRRUS_VM_IMAGE_SELECTOR|g"
          -e "s|[@]CIRRUS_VM_IMAGE_NAME@|$CIRRUS_VM_IMAGE_NAME|g"
          -e "s|[@]UPDATE_COMMAND@|$UPDATE_COMMAND|g"
          -e "s|[@]UPGRADE_COMMAND@|$UPGRADE_COMMAND|g"
          -e "s|[@]INSTALL_COMMAND@|$INSTALL_COMMAND|g"
          -e "s|[@]PATH@|$PATH_EXTRA${PATH_EXTRA:+:}\$PATH|g"
          -e "s|[@]PKG_CONFIG_PATH@|$PKG_CONFIG_PATH|g"
          -e "s|[@]PKGS@|$PKGS|g"
          -e "s|[@]MAKE@|$MAKE|g"
          -e "s|[@]PYTHON@|$PYTHON|g"
          -e "s|[@]PIP3@|$PIP3|g"
          -e "s|[@]PYPI_PKGS@|$PYPI_PKGS|g"
      <ci/cirrus/build.yml >ci/cirrus/$NAME.yml
    - cat ci/cirrus/$NAME.yml
    - cirrus-run -v --show-build-log always ci/cirrus/$NAME.yml
  rules:
    - if: "$CIRRUS_GITHUB_REPO && $CIRRUS_API_TOKEN"

# Cross-compilation container build jobs
i686-debian-10-container:
  extends: .container_job
  variables:
    NAME: debian-10-cross-i686

i686-debian-11-container:
  extends: .container_job
  variables:
    NAME: debian-11-cross-i686

# Native container build jobs
x64-alpine-314-container:
  extends: .container_job
  variables:
    NAME: alpine-314

x64-alpine-edge-container:
  extends: .container_job
  variables:
    NAME: alpine-edge

x64-centos-8-container:
  extends: .container_job
  variables:
    NAME: centos-8

x64-centos-stream-8-container:
  extends: .container_job
  variables:
    NAME: centos-stream-8

x64-debian-11-container:
  extends: .container_job
  variables:
    NAME: debian-11

x64-debian-sid-container:
  extends: .container_job
  variables:
    NAME: debian-sid

x64-fedora-33-container:
  extends: .container_job
  variables:
    NAME: fedora-33

x64-fedora-34-container:
  extends: .container_job
  variables:
    NAME: fedora-34

x64-fedora-rawhide-container:
  extends: .container_job
  allow_failure: true
  variables:
    NAME: fedora-rawhide

x64-opensuse-leap-152-container:
  extends: .container_job
  variables:
    NAME: opensuse-leap-152

x64-opensuse-tumbleweed-container:
  extends: .container_job
  variables:
    NAME: opensuse-tumbleweed

x64-ubuntu-1804-container:
  extends: .container_job
  variables:
    NAME: ubuntu-1804

x64-ubuntu-2004-container:
  extends: .container_job
  variables:
    NAME: ubuntu-2004

# Cross-compilation build jobs
i686-debian-10:
  extends: .native_build_job
  needs:
    - i686-debian-10-container
  variables:
    NAME: debian-10
    CROSS: i686

i686-debian-11:
  extends: .native_build_job
  needs:
    - i686-debian-11-container
  variables:
    NAME: debian-11
    CROSS: i686

# Native architecture build + test jobs
x64-debian-11:
  extends: .native_build_job
  needs:
    - x64-debian-11-container
  variables:
    NAME: debian-11

x64-debian-sid:
  extends: .native_build_job
  needs:
    - x64-debian-sid-container
  variables:
    NAME: debian-sid

x64-centos-8:
  extends: .native_build_job
  needs:
    - x64-centos-8-container
  variables:
    NAME: centos-8

x64-alpine-314:
  extends: .native_build_job
  needs:
    - x64-alpine-314-container
  variables:
    NAME: alpine-314

x64-alpine-edge:
  extends: .native_build_job
  needs:
    - x64-alpine-edge-container
  variables:
    NAME: alpine-edge

x64-centos-8-clang:
  extends: .native_build_job
  needs:
    - x64-centos-8-container
  variables:
    NAME: centos-8
    CC: clang

x64-centos-stream-8:
  extends: .native_build_job
  needs:
    - x64-centos-stream-8-container
  variables:
    NAME: centos-stream-8

x64-fedora-33:
  extends: .native_build_job
  needs:
    - x64-fedora-33-container
  variables:
    NAME: fedora-33

x64-fedora-34:
  extends: .native_build_job
  needs:
    - x64-fedora-34-container
  variables:
    NAME: fedora-34

x64-fedora-rawhide:
  extends: .native_build_job
  needs:
    - x64-fedora-rawhide-container
  variables:
    NAME: fedora-rawhide

x64-fedora-rawhide-clang:
  extends: .native_build_job
  needs:
    - x64-fedora-rawhide-container
  variables:
    NAME: fedora-rawhide
    CC: clang

x64-opensuse-leap-152:
  extends: .native_build_job
  needs:
    - x64-opensuse-leap-152-container
  variables:
    NAME: opensuse-leap-152

x64-opensuse-tumbleweed:
  extends: .native_build_job
  needs:
    - x64-opensuse-tumbleweed-container
  variables:
    NAME: opensuse-tumbleweed

x64-ubuntu-1804:
  extends: .native_build_job
  needs:
    - x64-ubuntu-1804-container
  variables:
    NAME: ubuntu-1804
    GOLANG: skip

x64-ubuntu-2004:
  extends: .native_build_job
  needs:
    - x64-ubuntu-2004-container
  variables:
    NAME: ubuntu-2004

x64-freebsd-12-build:
  extends: .cirrus_build_job
  variables:
    NAME: freebsd-12
    CIRRUS_VM_INSTANCE_TYPE: freebsd_instance
    CIRRUS_VM_IMAGE_SELECTOR: image_family
    CIRRUS_VM_IMAGE_NAME: freebsd-12-2
    UPDATE_COMMAND: pkg update
    INSTALL_COMMAND: pkg install -y

x64-freebsd-13-build:
  extends: .cirrus_build_job
  variables:
    NAME: freebsd-13
    CIRRUS_VM_INSTANCE_TYPE: freebsd_instance
    CIRRUS_VM_IMAGE_SELECTOR: image_family
    CIRRUS_VM_IMAGE_NAME: freebsd-13-0
    UPDATE_COMMAND: pkg update
    INSTALL_COMMAND: pkg install -y

x64-macos-11-build:
  extends: .cirrus_build_job
  allow_failure: true
  variables:
    NAME: macos-11
    CIRRUS_VM_INSTANCE_TYPE: osx_instance
    CIRRUS_VM_IMAGE_SELECTOR: image
    CIRRUS_VM_IMAGE_NAME: big-sur-base
    UPDATE_COMMAND: brew update
    UPGRADE_COMMAND: brew upgrade
    INSTALL_COMMAND: brew install
    PATH_EXTRA: /usr/local/opt/ccache/libexec:/usr/local/opt/gettext/bin:/usr/local/opt/libpcap/bin:/usr/local/opt/libxslt/bin:/usr/local/opt/rpcgen/bin
    PKG_CONFIG_PATH: /usr/local/opt/curl/lib/pkgconfig:/usr/local/opt/libpcap/lib/pkgconfig:/usr/local/opt/libxml2/lib/pkgconfig:/usr/local/opt/ncurses/lib/pkgconfig:/usr/local/opt/readline/lib/pkgconfig
